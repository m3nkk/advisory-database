---
identifier: OSVDB-114435
title: CSRF token fixation attacks
description: "Devise has been reported to be vulnerable to CSRF token fixation attacks.\r\nThe
  attack can only be exploited if the attacker can set the target session, either
  by subdomain cookies (similar to [described here](http://en.wikipedia.org/wiki/Session_fixation#Attack_scenarios))
  or by fixation over the same Wi-Fi network. If the user knows the CSRF token, cross-site
  forgery requests can be made. More information can be [found here](http://homakov.blogspot.com.es/2013/06/cookie-forcing-protection-made-easy.html).\r\n\r\nNote
  Devise is **not** vulnerable to session fixation attacks (i.e. the user cannot steal
  another user session by fixating the session id).\r\n\r\n\r\nIf you canâ€™t upgrade,
  you must protect your Devise application by adding the next three lines to a Rails
  initializer:\r\n\r\n    Warden::Manager.after_authentication do |record, warden,
  options|\r\n      warden.request.session.try(:delete, :_csrf_token)\r\n    end\r\n\r\nNotice
  the code above and the updated Devise versions will clean up the CSRF Token after
  any authentication (sign in, sign up, reset password, etc). So if you are using
  AJAX for such features, you will need to fetch a new CSRF token from the server.\r\n"
date: '2013-08-02'
affected_range: ">=2.0.0 <2.2.5 || >=3.0.0 <3.0.1"
fixed_versions:
- 2.2.5
- 3.0.1
affected_versions: All
solution: Upgrade and workaround available (see source)
credit: Egor Homakov
urls:
- http://blog.plataformatec.com.br/2013/08/csrf-token-fixation-attacks-in-devise/
- http://homakov.blogspot.com.es/2013/06/cookie-forcing-protection-made-easy.html
uuid: 2d24e9a9-8ead-4c3d-b3f1-4ed927faad1f
package_slug: gem/devise
