package main

import (
	"fmt"
	"os"
	"strings"

	"github.com/urfave/cli"
)

func PreviewVersions() cli.Command {
	return cli.Command{
		Name:  "preview",
		Usage: "Preview affected, fixed and ignored versions",
		Flags: Flags(),
		Action: func(c *cli.Context) error {
			// check arguments
			if len(c.Args()) != 1 {
				cli.ShowSubcommandHelp(c)
				return ErrWrongNumberOfArgs{1}
			}
			var path = c.Args().First()

			// load advisory
			adv, err := loadAdvisory(path)
			if err != nil {
				return err
			}

			// preview advisory
			resp, err := NewClient(c).Post(adv, PostModePreview)
			if err != nil {
				return err
			}
			versions := resp.Versions

			// build lists of versions
			fixed := []string{}
			affected := []string{}
			ignored := []string{}
			for _, v := range versions {
				switch {
				case v.Fixed:
					fixed = append(fixed, v.Number)
				case v.Affected:
					affected = append(affected, v.Number)
				default:
					ignored = append(ignored, v.Number)
				}
			}

			// show versions
			var output = []struct {
				name     string
				versions []string
			}{
				{"fixed", fixed},
				{"affected", affected},
				{"ignored", ignored},
			}
			for _, o := range output {
				fmt.Fprintln(os.Stderr, o.name+":", strings.Join(o.versions, " "))
			}
			return nil
		},
	}
}
