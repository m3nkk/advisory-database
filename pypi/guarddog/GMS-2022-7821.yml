---
identifier: "GMS-2022-7821"
identifiers:
- "GHSA-78m5-jpmf-ch7v"
- "GMS-2022-7821"
package_slug: "pypi/guarddog"
title: "GuardDog vulnerable to arbitrary file write when scanning a specially-crafted
  remote PyPI package"
description: "### Summary\n\nUnsafe extracting using `shutil.unpack_archive()` from
  a remotely retrieved tarball may lead to writing the extracted file to an unintended
  destination.\n\n### Details\n\nExtracting files using `shutil.unpack_archive()`
  from a potentially malicious tarball without validating that the destination file
  path is within the intended destination directory can cause files outside the destination
  directory to be overwritten. \n\nThe vulnerable code snippet is between [L153..158](https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158).
  \n\n```python\nresponse = requests.get(url, stream=True)\n\nwith open(zippath, \"wb\")
  as f:\n   f.write(response.raw.read())\n\nshutil.unpack_archive(zippath, unzippedpath)\n```\nIt
  seems that a remotely retrieved tarball which could be with the extension `.tar.gz`
  happens to be unpacked using `shutil.unpack_archive()` with no destination verification/limitation
  of the extracted files.\n\n### PoC\n\nThe PoC provided showcases the risk of extracting
  the non-harmless text file `sim4n6.txt` to a parent location rather than the current
  folder. \n\n```bash\n> tar --list -f archive.tar\ntar: Removing leading `../../../'
  from member names\n../../../sim4n6.txt\n\n> python3 \nPython 3.10.6 (main, Nov 2
  2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\"
  or \"license\" for more information.\n>>> import shutil\n>>> shutil.unpack_archive(\"archive.tar\")\n>>>
  exit()\n\n> file ../../../sim4n6.txt\n../../../sim4n6.txt: ASCII text\n```\n\n###
  A Potential Attack Scenario\n\n- An attacker may craft a malicious tarball with
  a filename path, such as `../../../../../../../../etc/passwd`, and then serve the
  archive remotely, thus, providing a possibility to overwrite the system files.\n\n###
  Mitigation\n\nPotential mitigation could be to:\n- Use a safer module, like `zipfile`.\n-
  Validate the location of the extracted files and discard those with malicious paths
  such as a relative path `..` or absolute ones. "
date: "2022-12-05"
pubdate: "2022-12-05"
affected_range: "<=0.1.7"
fixed_versions:
- "0.1.8"
affected_versions: "All versions up to 0.1.7"
not_impacted: "All versions after 0.1.7"
solution: "Upgrade to version 0.1.8 or above."
urls:
- "https://github.com/DataDog/guarddog/security/advisories/GHSA-78m5-jpmf-ch7v"
- "https://github.com/DataDog/guarddog/commit/37c7d0767ba28f4df46117d478f97652594c491c"
- "https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158"
- "https://github.com/advisories/GHSA-78m5-jpmf-ch7v"
uuid: "ddeb82be-5d36-49bb-bf89-a19d7b7f0169"
cwe_ids:
- "CWE-1035"
- "CWE-937"
