#!/usr/bin/env ruby
# frozen_string_literal: true

require 'yaml'
require 'time'
require 'json-schema'

current_dir = File.dirname(__FILE__)
schema_file = File.join(current_dir, 'schema.json')
$schema = JSON.parse(File.read(schema_file))

def validation_errors(yaml_file)
  JSON::Validator.fully_validate($schema, YAML.load_file(yaml_file).to_json)
end

def obtain_yaml_files(path)
  File.directory?(path) ? Dir.glob("#{path}/**/*.yml") : [path]
end

unless ARGV.any?
  puts "#{$0} <path0> <path1> ... <pathN>"
  puts 'path can be a yaml file and/or a directory'
  exit(1)
end

# make sure all provided paths do exist
if ARGV.reject { |path| File.exist?(path) }.any?
    puts 'Not all provided paths do exist'
    exit(1)
end

ARGV.flat_map{|path| obtain_yaml_files(path)}.each do |yaml_file|
  next if %w[unknown].include?(File.basename(yaml_file, '.yml'))
  
  errors = validation_errors(yaml_file)
  if errors.any?
    puts "#{yaml_file} is invalid: #{errors.join('; ')}"
    exit(1)
  end
end

puts 'All yaml files are valid'
exit(0)
