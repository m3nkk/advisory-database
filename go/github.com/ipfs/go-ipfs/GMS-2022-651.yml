---
identifier: "GMS-2022-651"
identifiers:
- "GHSA-fx5p-f64h-93xc"
- "GMS-2022-651"
package_slug: "go/github.com/ipfs/go-ipfs"
title: " Opened exploitable ports in default docker-compose.yaml in go-ipfs"
description: "### Impact\n\nAllows admin API access to the IPFS node.\n\n### Who ?\n\nThis
  affects people running the [docker-compose.yaml](https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml)
  service in an environment where the docker host is directly attached to a public
  or untrusted IP. In the vulnerable version, the private API endpoint is publicly
  forwarded by exposing it as `0.0.0.0:5001` on the host machine. \n\nIf the host
  machine is hidden behind a firewall or NAT (and the LAN is trusted for NAT), this
  is not an immediate issue because of the protection from the firewall or NAT. That
  said, we still recommend users update to follow security best practices of not putting
  unnecessary dependency on a working firewall.\n\n### Patches\nThis issue is in [docker-compose.yaml](https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml).
  Users need to replace their current `docker-compose.yaml` file with a version `0.12.1`
  or later.\n\nThere is no need to update any of the binaries. Users running previous
  versions like `0.12.0` or earlier can download the `0.12.1` `docker-compose.yaml`
  file. You can replace a vulnerable `docker-compose.yaml` file with a the new one
  with:\n\n```\ncurl https://raw.githubusercontent.com/ipfs/go-ipfs/v0.12.1/docker-compose.yaml
  > docker-compose.yaml\n```\n\n### How to test if you is vulnerable\n#### Binding
  check on the host\nOn the host machine, while IPFS is running, run as root:\n\n```bash\nnetstat
  -lnp | grep \":5001\"\n```\n\nThe output will be a list of listeners bound to `:5001`.\nYou
  then need to check that those listeners are private and preferably even localhost
  IPs.\n⚠️ If this listener is on `0.0.0.0` or a public IP you are very likely vulnerable.\n\n####
  Remote hailing\nWhile IPFS is running, you can try to contact the API from a remote
  machine. (Replace `1.2.3.4` with your node public IP. Or if you want to test in
  an untrusted NAT, then substitute the LAN IP instead.)\n\n```bash\ncurl -X POST
  http://1.2.3.4:5001/api/v0/version\n```\n\n⚠️ If you see any json outputted (e.g.,
  `{\"Commit\": \"<string>\",\"Golang\": \"<string>\",\"Repo\": \"<string>\",\"System\":
  \"<string>\",\"Version\": \"<string>\"}`), then you is vulnerable.\n\nIf it **fails**,
  then you are safe.\n\n### For more information\nIf you have any questions or comments
  about this advisory:\n* Please first read https://docs.ipfs.io/reference/http/api/
  about best practices\n* Ask in [IPFS Discord #ipfs-chatter](https://discord.gg/ipfs)\n*
  Open an issue in [go-ipfs](https://github.com/ipfs/go-ipfs)\n"
date: "2022-04-06"
pubdate: "2022-04-04"
affected_range: ">=v0.11.0 <v0.12.1"
fixed_versions:
- "v0.12.1"
affected_versions: "All versions starting from 0.11.0 before 0.12.1"
not_impacted: "All versions before 0.11.0, all versions starting from 0.12.1"
solution: "Upgrade to version 0.12.1 or above."
urls:
- "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-fx5p-f64h-93xc"
- "https://github.com/ipfs/go-ipfs/pull/8773"
- "https://github.com/ipfs/go-ipfs/commit/816a128aaf963d72c4930852ce32b9a4e31924a1"
- "https://github.com/ipfs/go-ipfs/releases/tag/v0.12.1"
- "https://github.com/advisories/GHSA-fx5p-f64h-93xc"
uuid: "13afdc83-9ed1-4593-b51e-fa2e6fd5e8ab"
cwe_ids:
- "CWE-1035"
- "CWE-937"
versions:
- number: "v0.11.0"
  commit:
    tags:
    - "v0.11.0"
    sha: "4d4794d9a2f0af09284192d1c30574ea8c222c8d"
    timestamp: "20211208213258"
- number: "v0.12.1"
  commit:
    tags:
    - "v0.12.1"
    sha: "78a092e6a5f643cf25c515e50d1df409ed62d176"
    timestamp: "20220317165226"
