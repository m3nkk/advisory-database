---
identifier: "GMS-2022-6877"
identifiers:
- "GHSA-672p-m5jq-mrh8"
- "GMS-2022-6877"
- "CVE-2022-36111"
package_slug: "go/github.com/codenotary/immudb/pkg/client"
title: "Insufficient Verification of Proofs generated by the immudb server in client
  SDK."
description: "### Impact\n\nIn certain scenario a malicious immudb server can provide
  a falsified proof that will be accepted by the client SDK signing a falsified transaction
  replacing the genuine one. This situation can not be triggered by a genuine immudb
  server and requires the client to perform a specific list of verified operations
  resulting in acceptance of an invalid state value.\n\nThis vulnerability only affects
  immudb client SDKs, the immudb server itself is not affected by this vulnerability.\n\n###
  Detailed description\n\nimmudb uses Merkle Tree enhanced with additional linear
  part to perform consistency proofs between two transactions. The linear part is
  built from the last leaf node of the Merkle Tree compensating for transactions that
  were not yet consumed by the Merkle Tree calculation.\n\nThe Merkle Tree part is
  then used to perform proofs for things that are in transaction range covered by
  the Merkle Tree where the linear part is used to check those that are not yet in
  the Merkle Tree.\n\nWhen doing consistency checks between two immudb states, the
  linear proof part is not fully checked. In fact only the first (last Merkle Tree
  leaf) and the last (current DB state value) are checked against new Merkle Tree
  without ensuring that elements in the middle of that chain are correctly added as
  Merkle Tree leafs.\n\nThis lack of check means that the database can present different
  set of hashes on the linear proof part to what would later be used once those become
  part of the Merkle Tree. This property can be exploited by the database to expose
  two different transaction entries depending on the other transaction that the user
  requested consistency proof for.\n\nIn practice this could lead to a following scenario:\n\n*
  a client requests a verified write operation\n* the server responds with a proof
  for the transaction\n* client stores the state value retrieved from the server and
  expects it to be a confirmation of that write and all the history of the database
  before that transaction\n* a series of validated read / write operations is performed
  by the client, each accompanied by a successfully validated consistency proof and
  update of the client state\n* the client requests verified get operation on the
  transaction it has written before (and that was verified with a proof from the server)\n*
  the server replies with a completely different transaction that can be properly
  validated according to the currently stored db state on the client side\n\n### Patches\n\nThe
  following Go SDK versions is not vulnerable\n\n| **SDK** | **Version** |\n|-------|------------|\n|
  [go](pkg.go.dev/github.com/codenotary/immudb/pkg/client) | 1.4.1 |\n\n### Workarounds\n\nInvalid
  proofs can not be generated in a normal immudb server and will be detected by a
  genuine replica server.\nTo ensure that the server does not produce invalid proofs
  and to check that the history presented by the server\ndoes not contain falsified
  transactions, one should run a genuine immudb replica server in a safe environment\nand
  fully synchronize all databases with the primary.\n\n### References\n\n* https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake\n\n###
  For more information\n\nIf you have any questions or comments about this advisory:\n\n*
  Open a discussion in [immudb Discussions](https://github.com/codenotary/immudb/discussions/new)\n*
  Email us at [immudb-security@codenotary.com](mailto:immudb-security@codenotary.com)\n"
date: "2022-11-21"
pubdate: "2022-11-21"
affected_range: "<v1.4.1"
fixed_versions:
- "v1.4.1"
affected_versions: "All versions before 1.4.1"
not_impacted: "All versions starting from 1.4.1"
solution: "Upgrade to version 1.4.1 or above."
urls:
- "https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8"
- "https://github.com/advisories/GHSA-672p-m5jq-mrh8"
uuid: "24fffad2-f7a9-4ac8-83c9-01b7488a5e15"
cwe_ids:
- "CWE-1035"
- "CWE-937"
versions:
- number: "v1.4.1"
  commit:
    tags:
    - "v1.4.1"
    sha: "ad7623ce74bb3257d78af75941d494883591141a"
    timestamp: "20221121134825"
