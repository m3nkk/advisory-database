---
identifier: "GMS-2021-18"
identifiers:
- "GHSA-4jg2-84c2-pj95"
- "GMS-2021-18"
package_slug: "npm/@asyncapi/modelina"
title: "Improper Control of Generation of Code ('Code Injection') in @asyncapi/modelina"
description: "### Impact\nAnyone who is using the default presets and/or does not
  handle the functionality themself.\n\n### Patches\nIt has not been patched yet.\n\n###
  Workarounds\nFully custom presets that change the entire rendering process which
  can then escape the user input.\n\n### For more information\nEven though that I
<<<<<<< HEAD
  changed all the presets here, the vulnerability is still present throughout. I am
  using a JSON Schema here for simplicity.\n```ts\nconst jsonSchemaDoc = {\n $id:
  'CustomClass',\n type: 'object',\n properties: {\n  'property: any; constructor(){console.log(\"injected\")}
  private _temp': { type: 'string' },\n }\n};\ngenerator = new TypeScriptGenerator(\n
  { \n presets: [\n  {\n  class: {\n   property({ propertyName, content }) {\n    return
  `private ${propertyName}: any;`;\n   },\n   ctor() {\n    return '';\n   },\n   getter()
  {\n    return '';\n   },\n   setter() {\n    return '';\n   }\n  }\n  }\n ]\n }\n);\nconst
  inputModel = await generator.process(jsonSchemaDoc);\n```\nThis would render\n```ts\nexport
  class CustomClass {\n private property: any; \n constructor(){console.log(\"injected\")}
  \n private _temp: any;\n private additionalProperties: any;\n}\n```"
=======
  changed all the presets here, the vulnerability is still present throughout."
>>>>>>> eae2706c2c4b9a2455937daaa92aa5084e3dd5c5
date: "2021-09-21"
pubdate: "2021-09-21"
affected_range: "<=0.30.1"
fixed_versions: []
affected_versions: "All versions up to 0.30.1"
not_impacted: ""
solution: "Unfortunately, there is no solution available yet."
urls:
- "https://github.com/asyncapi/modelina/security/advisories/GHSA-4jg2-84c2-pj95"
- "https://github.com/advisories/GHSA-4jg2-84c2-pj95"
uuid: "cb2a2057-36ad-4ea0-bf1a-4d60735aebda"
cwe_ids:
- "CWE-1035"
- "CWE-937"
